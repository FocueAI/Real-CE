# Modified SRResNet w/o BN from:
# Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network

# general settings
name: 002_MSRResNet_x2_TFSR_Global
model_type: SRModel
scale: 2
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: TFSR
    type: PairedImageDatasetTextLine
    dataroot_gt: ['/data0_ssd2t/majianqi/SynthBG/crop_2nd_batch/'] #, '/data1_ssd4t/majianqi/CSVTR/'
    dataroot_lq: # /data0_ssd2t/majianqi/SynthBG/crop_2nd_batch/
    meta_info_file: None
    # (for lmdb)
    # dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub.lmdb
    # dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic_X2_sub.lmdb
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb

    gt_size: [64, 256]
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

    deformation: false
    mode: train

  val:
    name: TFSR
    type: PairedImageDatasetTextLine
    dataroot_gt: ['/data1_ssd4t/majianqi/CSVTR/']
    dataroot_lq: /data0_ssd2t/majianqi/TFSR
    # meta_info_file: None
    gt_size: [64, 256]
    io_backend:
      type: disk
    mode: test

# network structures
network_g:
  type: TP_MSRResNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 8
  upscale: 2
# path
path:
  pretrain_network_g: /data1_ssd4t/majianqi/experiments/002_GlobalMSRResNet_x2_TFSR_perceptual_TPGSR_pretrain_masking/models/net_g_350000.pth
  strict_load_g: false
  resume_state: ~
  experiments_root: /data1_ssd4t/majianqi/experiments/002_GlobalMSRResNet_x2_TFSR_perceptual_TPGSR_pretrain_masking_v2

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [500000]
    restart_weights: [1]
    eta_min: !!float 1e-7

  total_iter: 1000000
  warmup_iter: -1  # no warm up

  seman_opt:
    type: SemanticLoss
    loss_weight: 1.0
    reduction: mean
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 0.01  # before relu
      'conv4_4': 0.01
      'conv3_4': 0.02
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0.0
    criterion: l1

# validation settings
val:
  val_freq: !!float 50000
  save_img: true
  # save_recognition: true

  metrics:
    psnr_torch: # metric name, can be arbitrary
      type: calculate_psnr_torch
      crop_border: 2
      test_y_channel: false
    ssim_torch:
      type: calculate_ssim_torch
      crop_border: 2
      test_y_channel: false
    #mask_ssim:
    #  type: calculate_region_ssim
    #  crop_border: 2
    #  test_y_channel: false
    #mask_psnr:
    #  type: calculate_region_psnr
    #  crop_border: 2
    #  test_y_channel: false
    lpips:
      type: calculate_lpips
      crop_border: 2
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
